package com.github.minsight.gui;

import com.github.minsight.imdb.BackgroundWorker;
import com.github.minsight.io.BackgroundCSVFileWriter;
import com.github.minsight.io.FileSearch;
import com.github.minsight.model.ImdbEntry;
import java.io.File;
import java.util.List;
import java.util.concurrent.ExecutionException;


/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MovieInsightBasicFrame.java
 *
 * Created on 29 Oct, 2011, 8:15:33 PM
 */
/**
 *
 * @author stratwine
 */
public class MovieInsightBasicFrame extends javax.swing.JFrame {

    ComponentsReferenceHolder componentsReferenceHolder = new ComponentsReferenceHolder();
    BackgroundWorker backgroundWorker;
    Informant informant; //initialized after initComponents()

    /** Creates new form MovieInsightBasicFrame */
    public MovieInsightBasicFrame() {

        initComponents();
        hideFileSaveRelatedUI();
        hideProgressBar();
        populateComponentRefHolder();
        initInformant();
        initListenerForFileSaveButton();
    }

    private void hideScanButton() {
        jButton1.setVisible(false);
    }

    private void initInformant() {
        informant = new Informant(componentsReferenceHolder);
    }

    private void hideProgressBar() {
        jProgressBar1.setVisible(false);
    }

    private void initListenerForFileSaveButton() {
        jButton2.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
    }

    private void populateComponentRefHolder() {
        componentsReferenceHolder.setDirChooser(dirChooser);
        componentsReferenceHolder.setProgressBar(jProgressBar1);
        componentsReferenceHolder.setSaveButton(jButton2);
        componentsReferenceHolder.setScanButton(jButton1);

    }

    private void hideFileSaveRelatedUI() {
        jButton2.setVisible(false);
     
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        dirChooser = new javax.swing.JFileChooser();
        jProgressBar1 = new javax.swing.JProgressBar();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(800, 800, 800, 800));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jButton1.setText("Scan for movies and fetch imdb info");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        dirChooser.setAcceptAllFileFilterUsed(false);
        dirChooser.setControlButtonsAreShown(false);
        dirChooser.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);
        dirChooser.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jProgressBar1.setBorderPainted(false);
        jProgressBar1.setInheritsPopupMenu(true);
        jProgressBar1.setString("fetching info");
        jProgressBar1.setStringPainted(true);

        jButton2.setText("save as csv in selected directory");
        jButton2.setActionCommand("saveButton");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(dirChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton2)
                            .addComponent(jButton1)))
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 534, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(82, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(dirChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        jButton2.getAccessibleContext().setAccessibleName("saveButton");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(452, 452, 452)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 766, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(492, 492, 492)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-654)/2, (screenSize.height-568)/2, 654, 568);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            List<ImdbEntry> imdbEntries = backgroundWorker.get();
            File saveAtLocation = new File(dirChooser.getSelectedFile().toString());
            BackgroundCSVFileWriter csvFileWriter = new BackgroundCSVFileWriter(saveAtLocation, imdbEntries, informant);
            csvFileWriter.execute();
        } catch (InterruptedException ex) {
            informant.informErrorOccured(ex);
        } catch (ExecutionException ex) {
            informant.informErrorOccured(ex);
        }

    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        showProgressBar();
        hideScanButton();
        String locationToSearch = dirChooser.getSelectedFile().toString();
        FileSearch fileSearch = new FileSearch(locationToSearch,informant);
        backgroundWorker = new BackgroundWorker(informant, fileSearch);
        backgroundWorker.execute();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MovieInsightBasicFrame().setVisible(true);

            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser dirChooser;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    // End of variables declaration//GEN-END:variables

    private void showProgressBar() {
        jProgressBar1.setIndeterminate(true);
        jProgressBar1.setVisible(true);
    }
    
}
